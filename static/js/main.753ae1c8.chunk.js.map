{"version":3,"sources":["components/NavbarView.tsx","components/AboutView.tsx","features/queries.tsx","components/CardView.tsx","components/SearchView.tsx","components/ErrorView.tsx","components/CountryView.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["Bar","styled","div","Title","h1","LinkMenu","ul","NavbarView","to","AboutView","GET_COUNTRIES","gql","Box","props","color","Flag","img","Info","Button","button","HR","HL","CardView","Country","src","flag","className","name","capital","region","Container","Input","input","SearchView","useState","text","setText","useQuery","variables","countryName","loading","error","data","useEffect","console","log","onChange","e","target","value","placeholder","type","countries","edges","map","country","index","node","id","numericCode","ErrorView","CountryView","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.753ae1c8.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Bar = styled.div`\r\n  display:flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px 10%;\r\n  box-shadow: 0px 2px 5px #111111;\r\n\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  cursor:pointer;\r\n  flex:2;\r\n  margin: 0;\r\n  padding:0;\r\n  \r\n  & a {\r\n    font-family: 'Oxygen', sans-serif;\r\n    font-size: 3vmax;\r\n    font-weight: 700;\r\n    text-decoration: none;\r\n    color: #A2A2A2;\r\n    transition: color 0.3s ease-out;\r\n  }\r\n\r\n  & a:hover{\r\n    color: teal;\r\n    transition: color 0.3s ease;\r\n  }\r\n  \r\n`;\r\n\r\nconst LinkMenu = styled.ul`\r\n  list-style: none;\r\n  flex:2;\r\n\r\n  & li {\r\n    flex:1;\r\n    display: inline-block;\r\n    padding: 0px 20px;\r\n  \r\n  }\r\n\r\n  & li a {\r\n    font-family: 'Oxygen', sans-serif;\r\n    font-weight: 500;\r\n    font-size: 1.5vmax;\r\n    color: teal;\r\n    text-decoration: none;\r\n    transition: color 0.3s ease-out;\r\n\r\n    &:hover, &focus{\r\n      color:#a1a1a1;\r\n      transition: color 0.3s ease;\r\n    }\r\n  }\r\n\r\n\r\n\r\n`\r\n\r\n\r\n\r\nfunction NavbarView() {\r\n  return (\r\n    <Bar>\r\n      <Title>\r\n        <Link to=\"/\">\r\n          CountriesDB\r\n        </Link>\r\n      </Title>\r\n      <nav>\r\n        <LinkMenu>\r\n          <li><Link to=\"/\"> Home </Link></li>\r\n          <li><Link to=\"/about\"> About </Link></li>\r\n          <li><Link to=\"#\"> Github </Link></li>\r\n        </LinkMenu>\r\n      </nav>\r\n\r\n    </Bar>\r\n  )\r\n}\r\n\r\nexport default NavbarView\r\n","import React from 'react'\r\n\r\nfunction AboutView() {\r\n  return (\r\n    <div>\r\n      About View\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AboutView\r\n","import { gql } from '@apollo/client'\r\n\r\nexport const GET_COUNTRIES = gql`\r\n  query GetCountries($countryName: String!){\r\n    countries(name_Icontains: $countryName, first: 59){\r\n      edges{\r\n        node{\r\n          name\r\n          capital\r\n          region\r\n          flag\r\n          numericCode\r\n        }\r\n      }\r\n    }\r\n  }\r\n`","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { CountryObject } from '../features/interfaces';\r\n\r\nconst Box = styled.div`\r\n  overflow:hidden;\r\n  width: 250px;\r\n  height: auto;\r\n  margin: 10px;\r\n  padding:10px;\r\n  background: ${props => props.color || \"#24252A\"};\r\n  border-radius: 5px;\r\n  border: 1px solid #212227;\r\n  transition: all 0.3s ease-out;\r\n\r\n  &:hover{\r\n    & p{\r\n      color: #000;\r\n      transition: all 0.2s ease;\r\n    }\r\n    background: teal;\r\n    transition: all 0.2s ease;\r\n  }\r\n`;\r\n\r\nconst Flag = styled.img`\r\n  padding: 12px 0px 0px 0px;\r\n  height:50%;\r\n  width:100%;\r\n`\r\n\r\nconst Info = styled.div`\r\n  color: #a1a1a1;\r\n  height:50%;\r\n  font-family: 'Oxygen', sans-serif;\r\n  text-align: center;\r\n\r\n  & .paragraph {\r\n    font-size: 16px;\r\n    margin: 10px;\r\n  }\r\n`\r\n\r\nconst Button = styled.button`\r\n  font-family: 'Oxygen';\r\n  border: none;\r\n  background: none;\r\n  color: #a1a1a1;\r\n  width: 100%;\r\n  font-size: 0.9em;\r\n  height: 40px;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease-out;\r\n  border-radius: 3px;\r\n  \r\n  &:hover {\r\n    background: #260A0A;\r\n    font-weight: 600;\r\n    font-size:1em;\r\n    transition: all 0.2s ease;\r\n  }\r\n`\r\nconst HR = styled.div`\r\n  font-weight: 300;\r\n  float:left;\r\n  padding-bottom: 10px;\r\n  width:75%;\r\n  word-wrap:break-word;\r\n  \r\n`\r\n\r\nconst HL = styled(HR)`\r\n  font-weight: 800;\r\n  width:25%;\r\n  color: #EA526F;\r\n  `\r\n\r\n\r\n\r\n\r\nfunction CardView(Country: CountryObject) {\r\n  return (\r\n    <Box >\r\n      <Flag src={Country.flag} />\r\n      <Info>\r\n        <div className=\"paragraph\"><HL>Name </HL> <HR>{Country.name} </HR></div>\r\n        {Country.capital ? <div className=\"paragraph\"><HL>Capital </HL> <HR>{Country.capital} </HR></div> : null}\r\n        {Country.region ? <div className=\"paragraph\"> <HL>Region </HL> <HR>{Country.region}</HR> </div> : null}\r\n        <Link to=\"/about\">\r\n          <Button > View details </Button>\r\n        </Link>\r\n      </Info>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default CardView\r\n","import { useEffect, useState } from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport styled from 'styled-components';\r\nimport { GET_COUNTRIES } from '../features/queries';\r\nimport CardView from './CardView';\r\n\r\n\r\nconst Box = styled.div`\r\n  padding: 20px;\r\n  display:flex;\r\n  align-items:center;\r\n  justify-content:center;\r\n  \r\n`;\r\n\r\n\r\nconst Container = styled.div`\r\n  display:flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-wrap:wrap;\r\n  padding:20px 10%;\r\n`\r\n\r\nconst Input = styled.input`\r\n  font-family: 'Oxygen',sans-serif;\r\n  font-size: 25px;\r\n  color: #a1a1a1;\r\n  background: none;\r\n  border:1px solid #313131;\r\n  width: 50%;\r\n  height: 2em;\r\n  text-align: center;\r\n\r\n  &:hover, &:focus{\r\n    border: 1px solid teal;\r\n    outline:none;\r\n  }\r\n  \r\n`\r\n\r\nfunction SearchView() {\r\n  const [text, setText] = useState('');\r\n  const { loading, error, data } = useQuery(GET_COUNTRIES, {\r\n    variables: { countryName: text }\r\n  })\r\n\r\n  useEffect(() => {\r\n    console.log(data);\r\n  }, [data])\r\n\r\n\r\n\r\n\r\n  //Yeah it's ugly,  welp\r\n  if (loading) return (<>\r\n    <Box>\r\n      <Input onChange={(e) => { setText(e.target.value) }} placeholder=\"Type name of country\" type=\"text\" />\r\n    </Box>\r\n    <Container>\r\n\r\n      loading...\r\n\r\n    </Container>\r\n  </>)\r\n\r\n\r\n  if (error) return (<>\r\n    <Box>\r\n      <Input onChange={(e) => { setText(e.target.value) }} placeholder=\"Type name of country\" type=\"text\" />\r\n    </Box>\r\n    <Container>\r\n\r\n      error\r\n\r\n    </Container>\r\n  </>)\r\n\r\n  return (\r\n    <>\r\n      <Box>\r\n        <Input onChange={(e) => { setText(e.target.value) }} placeholder=\"Type name of country\" type=\"text\" />\r\n      </Box>\r\n      <Container>\r\n\r\n        {data.countries.edges ? data.countries.edges.map((country: any, index: number) => {\r\n          const { node } = country;\r\n          return <CardView\r\n            name={node.name}\r\n            flag={node.flag}\r\n            id={node.numericCode}\r\n            capital={node.capital}\r\n            region={node.region} />;\r\n\r\n        }) : \"No countries matches the query\"}\r\n\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SearchView;\r\n","function ErrorView() {\r\n  return (\r\n    <div>\r\n      ERROR\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorView\r\n","function CountryView() {\r\n  return (\r\n    <div>\r\n      Country View\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CountryView\r\n","import { BrowserRouter as Router, Switch, Route, HashRouter } from 'react-router-dom';\r\nimport NavbarView from './components/NavbarView';\r\nimport AboutView from './components/AboutView';\r\nimport SearchView from './components/SearchView';\r\nimport ErrorView from './components/ErrorView';\r\nimport CountryView from './components/CountryView';\r\n\r\nimport './App.scss';\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter >\r\n      <NavbarView />\r\n      <Switch>\r\n\r\n        <Route exact path=\"/\">\r\n          <SearchView />\r\n        </Route>\r\n\r\n        <Route exact path=\"/about\">\r\n          <AboutView />\r\n        </Route>\r\n\r\n        <Route exact path=\"/country/:id\">\r\n          <CountryView />\r\n        </Route>\r\n\r\n        <Route path=\"*\">\r\n          <ErrorView />\r\n        </Route>\r\n\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider\r\n} from '@apollo/client';\r\n\r\n\r\n//INIT APOLLO CLIENT\r\nconst client = new ApolloClient({\r\n  uri: 'https://graphql.country/graphql',\r\n  cache: new InMemoryCache()\r\n})\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}